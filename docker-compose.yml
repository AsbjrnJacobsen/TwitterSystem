services:
  seq:
    image: datalust/seq
    ports:
      - 5341:5341
      - 5342:80
    volumes:
      - ./seq_data:/dataqq
    environment:
      - ACCEPT_EULA=Y
  
  post-db:
    hostname: post-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MSSQL_SA_PASSWORD: "pepsi1234!"
      ACCEPT_EULA: "Y"

  account-db:
    hostname: account-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MSSQL_SA_PASSWORD: "pepsi1234!"
      ACCEPT_EULA: "Y"
    
  account-service:
    build:
      context: .
      dockerfile: AccountService/Debug.Dockerfile
    depends_on:
      vault:
        condition: service_healthy
    ports:
      - "8081:8080"
    environment:
      ASDBConnectionString: "Server=account-db;Initial Catalog=ASDB;User ID=sa;Password=pepsi1234!;TrustServerCertificate=True;"
      VAULT_URL: "http://vault:8200"
      VAULT_TOKEN: "my-token"
    
  post-service:
    build:
      context: .
      dockerfile: PostsService/Debug.Dockerfile
    depends_on:
      vault:
        condition: service_healthy
    ports:
      - "8082:8080"
    environment:
      PSDBConnectionString: "Server=post-db;Initial Catalog=PSDB;User ID=sa;Password=pepsi1234!;TrustServerCertificate=True;"
      VAULT_URL: "http://vault:8200"
      VAULT_TOKEN: "my-token"
  
  timeline-service:
    build:
      context: .
      dockerfile: TimelineService/Debug.Dockerfile
    depends_on:
      vault:
        condition: service_healthy
    ports:
      - "8083:8080"
    environment:
      ASDBConnectionString: "Server=account-db;Initial Catalog=ASDB;User ID=sa;Password=pepsi1234!;TrustServerCertificate=True;"
      PSDBConnectionString: "Server=post-db;Initial Catalog=PSDB;User ID=sa;Password=pepsi1234!;TrustServerCertificate=True;"
      VAULT_URL: "http://vault:8200"
      VAULT_TOKEN: "my-token"
      
  gatewayapi:
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: GatewayAPI/Debug.Dockerfile
    depends_on:
      account-service:
        condition: service_started
      post-service:
        condition: service_started
      timeline-service:
        condition: service_started
    environment:
      TimelineServiceUrl: "http://timeline-service:8080/"
      PostServiceUrl: "http://post-service:8080/"
      AccountServiceUrl: "http://account-service:8080/"
      VAULT_URL: "http://vault:8200"
      VAULT_TOKEN: "my-token"
  
  vault:
    image: hashicorp/vault:latest
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "my-token"
      #VAULT_LOCAL_CONFIG: '{"storage": {"file": {"path": "/vault/file"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h", "ui": true}'
      #VAULT_ADDR: "http://0.0.0.0:8200"
      #VAULT_API_ADDR: "http://0.0.0.0:8200"
      #VAULT_ADDRESS: "http://0.0.0.0:8200"
    volumes:
      - ./vault/file:/vault/file:rw
      - ./vault/data:/vault/data:rw
      - ./vault/config:/vault/config/:rw
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--proxy", "off", "http://127.0.0.1:8200/v1/sys/health?standbyok=true" ]
      interval: 3s
      timeout: 5s
      retries: 30
    cap_add:
      - IPC_LOCK
    entrypoint: >
      sh -c 'echo "ui = true
      
      storage \"file\" {
        path = \"/vault/data\"
      }
      
      api_addr = \"http://127.0.0.1:8200\"
      
      default_max_request_duration = \"1s\"
      
      dev {
        dev_root_token_id = \"my-token\"
      }
      
      controller {
        api_rate_limit_disable = true
      }
      
      listener "tcp" {
        address = \"vault:8200\"
        tls_disable = true
      }
      
      path \"kv-v2/data/*\" {
        capabilities = [\"read\", \"write\"]
        rate_limit = \"5000r/s\" # Allow 50 requests per second
      }
      " > /vault/config/config.hcl && vault server -dev -dev-root-token-id=my-token -config /vault/config/config.hcl'